
font_family      FiraCode Nerd Font 
bold_font        auto
italic_font      auto
bold_italic_font auto

font_size 11.0

symbol_map U+2010 Source Code Pro

touch_scroll_multiplier 1.0

remember_window_size  no
initial_window_width  1280
initial_window_height 720

enabled_layouts splits, stack

hide_window_decorations no

#: Hide the window decorations (title-bar and window borders) with
#: yes. On macOS, titlebar-only can be used to only hide the titlebar.
#: Whether this works and exactly what effect it has depends on the
#: window manager/operating system. Note that the effects of changing
#: this option when reloading config are undefined.

background_opacity 0.9
background_blur 1

#: The opacity of the background. A number between zero and one, where
#: one is opaque and zero is fully transparent. This will only work if
#: supported by the OS (for instance, when using a compositor under
#: X11). Note that it only sets the background color's opacity in
#: cells that have the same background color as the default terminal
#: background, so that things like the status bar in vim, powerline
#: prompts, etc. still look good. But it means that if you use a color
#: theme with a background color in your editor, it will not be
#: rendered as transparent. Instead you should change the default
#: background color in your kitty config and not use a background
#: color in the editor color scheme. Or use the escape codes to set
#: the terminals default colors in a shell script to launch your
#: editor. Be aware that using a value less than 1.0 is a (possibly
#: significant) performance hit. If you want to dynamically change
#: transparency of windows, set dynamic_background_opacity to yes
#: (this is off by default as it has a performance cost). Changing
#: this option when reloading the config will only work if
#: dynamic_background_opacity was enabled in the original config.

editor nvim

shell_integration enabled

# kitty-scrollback.nvim Kitten alias
# action_alias kitty_scrollback_nvim kitten /home/ethan/.local/share/nvim/lazy/kitty-scrollback.nvim/python/kitty_scrollback_nvim.py

# Browse scrollback buffer in nvim
# map kitty_mod+space kitty_scrollback_nvim
# Browse output of the last shell command in nvim
# map kitty_mod+g kitty_scrollback_nvim --config ksb_builtin_last_cmd_output
# Show clicked command output in nvim
# mouse_map ctrl+shift+right press ungrabbed combine : mouse_select_command_output : kitty_scrollback_nvim --config ksb_builtin_last_visited_cmd_output

allow_remote_control no

# listen_on unix:/tmp/kitty


#: Allow other programs to control kitty. If you turn this on, other
#: programs can control all aspects of kitty, including sending text
#: to kitty windows, opening new windows, closing windows, reading the
#: content of windows, etc. Note that this even works over SSH
#: connections. The default setting of no prevents any form of remote
#: control. The meaning of the various values are:

#: password
#:     Remote control requests received over both the TTY device and the socket are
#:     confirmed based on passwords, see remote_control_password.

#: socket-only
#:     Remote control requests received over a socket are accepted unconditionally.
#:     Requests received over the TTY are denied. See listen_on.

#: socket
#:     Remote control requests received over a socket are accepted unconditionally.
#:     Requests received over the TTY are confirmed based on password.

#: no
#:     Remote control is completely disabled.

#: yes
#:     Remote control requests are always accepted.

linux_display_server X11

wayland_enable_ime yes

#: New window

map kitty_mod+enter launch --location=hsplit
map kitty_mod+\ launch --location=vsplit

#: Close window

# map kitty_mod+w close_window
# map shift+cmd+d close_window

map kitty_mod+h neighboring_window left
map kitty_mod+l neighboring_window right
map kitty_mod+j neighboring_window down
map kitty_mod+k neighboring_window up

#: Resize window

map ctrl+alt+n resize_window narrower
map ctrl+alt+w resize_window wider
map ctrl+alt+t resize_window taller
map ctrl+alt+s resize_window shorter
map ctrl+alt+home resize_window reset

#: Move window

map ctrl+alt+k move_window up
map ctrl+alt+h move_window left
map ctrl+alt+l move_window right
map ctrl+alt+j move_window down

map kitty_mod+alt+k layout_action move_to_screen_edge top
map kitty_mod+alt+h layout_action move_to_screen_edge left
map kitty_mod+alt+l layout_action move_to_screen_edge right
map kitty_mod+alt+j layout_action move_to_screen_edge bottom

#: Next layout

map kitty_mod+` next_layout

#: scrollback search

# scrollback_pager bash -c "exec nvim 63<&0 0</dev/null -u NONE -c 'map <silent> q :qa!<CR>' -c 'set shell=bash scrollback=100000 termguicolors laststatus=0 clipboard+=unnamedplus' -c 'autocmd TermEnter * stopinsert' -c 'autocmd TermClose * call cursor(max([0,INPUT_LINE_NUMBER-1])+CURSOR_LINE, CURSOR_COLUMN)' -c 'terminal sed </dev/fd/63 -e \"s/'$'\x1b'']8;;file:[^\]*[\]//g\" && sleep 0.01 && printf \"'$'\x1b'']2;\"'"
#
# map kitty_mod+space show_scrollback

#: Tab bar config
# tab_bar_edge  bottom
# tab_bar_align center
# tab_bar_margin_width  0
# tab_bar_margin_height 0 0
# tab_bar_style    custom
# tab_separator       ""
# tab_title_template  " {index} {title} "
# tab_fade    0 
# tab_powerline_style angled
# map kitty_mod+d select_tab
# tab_bar_margin_width      2
# tab_bar_margin_height     0 0
# tab_bar_style             separator
# tab_bar_min_tabs          2
# tab_separator             ""
# tab_title_template        "{fmt.fg._323449}{fmt.bg.default}{fmt.fg._04d1f9}{fmt.bg.default}{index}{fmt.fg._04d1f9}{fmt.bg._323449} {title[:15] + (title[15:] and '…')} {fmt.fg._323449}{fmt.bg.default} "
# active_tab_title_template "{fmt.fg._37f499}{fmt.bg.default}{fmt.fg._212337}{fmt.bg._37f499}{fmt.fg._212337}{fmt.bg._37f499} {title[:40] + (title[40:] and '…')} {fmt.fg._37f499}{fmt.bg.default} "

# BEGIN_KITTY_THEME
# Tango Dark
include current-theme.conf
# END_KITTY_THEME
